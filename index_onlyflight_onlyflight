var express = require('express'),
    morgan = require ('morgan'),
    request = require('request'),
    bodyParser = require('body-parser'),
    hbs = require ('hbs'),
    http = require('https');

var app = express();

var port = process.env.PORT || 3000;


app.use(express.static('public'));
app.use(morgan('dev'));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));
app.set('view engine', 'hbs');


app.get('/', (req, res) => {
  res.render('index');
});




app.get('/flight', (req, res) => {

  var app_id = "152ae116",
      app_key = "16c9819f9d3ab5e97d46e66d404402ac",

      flightName = req.query.flightNumber.toUpperCase().replace(/\s+/g, '');
      url = '/public-flights/flights?app_id=' + app_id + '&app_key=' + app_key + '&flightname=' + flightName;

  var options = {
    method: "GET",
    hostname: "api.schiphol.nl",
    port: null,
    path: url,
    headers: {
      resourceversion: "v3"
    }
  };

  http.get(options, function(response) {
    if(response.statusMessage == "No Content") {
      console.log("Data cannot found");

      res.render('index');

    } else {
      console.log(response.statusMessage);
      var chunks = [];

      response.on("data", function(chunk) {
        chunks.push(chunk);
      }).on("end", function() {
        var body = Buffer.concat(chunks);
        var parsedData = JSON.parse(body);
        console.log(parsedData);
        var flightData = [];


        flightData.destinations = parsedData.flights[0].route.destinations[0];
        flightData.flightName = parsedData.flights[0].flightName;
        flightData.scheduleDate = parsedData.flights[0].scheduleDate;
        flightData.scheduleTime = parsedData.flights[0].scheduleTime.substring(0, parsedData.flights[0].scheduleTime.length-3);
        flightData.gate = parsedData.flights[0].gate;
        flightData.terminal = parsedData.flights[0].terminal;
        flightData.checkIn = parsedData.flights[0].checkinAllocations.checkinAllocations[0].rows.rows[0].position;
        flightData.flightIA = parsedData.flights[0].prefixIATA;

        flightData.scheduleDag = parsedData.flights[0].scheduleDate.substring(8);
        flightData.scheduleMaand = parsedData.flights[0].scheduleDate.substring(5, parsedData.flights[0].scheduleDate.length-3);

        flightData.push(flightData);
        console.log("---- in semi ----");
        console.log(flightData);

        res.render('flighttest', { flightData: flightData});
      });
    }
  });
});


app.listen(port, () => {
  console.log('Web server started on port', app.get('port'));
});
